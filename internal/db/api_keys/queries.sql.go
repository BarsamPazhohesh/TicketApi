// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package api_keys

import (
	"context"
	"database/sql"
)

const addApiKey = `-- name: AddApiKey :exec
INSERT INTO api_keys (key, description) VALUES ( ?, ? )
`

type AddApiKeyParams struct {
	Key         string
	Description sql.NullString
}

func (q *Queries) AddApiKey(ctx context.Context, arg AddApiKeyParams) error {
	_, err := q.db.ExecContext(ctx, addApiKey, arg.Key, arg.Description)
	return err
}

const getActiveAPIKeyID = `-- name: GetActiveAPIKeyID :one
SELECT id FROM api_keys
WHERE deleted = 0
AND status != 0
AND key = ?
`

func (q *Queries) GetActiveAPIKeyID(ctx context.Context, key string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getActiveAPIKeyID, key)
	var id int64
	err := row.Scan(&id)
	return id, err
}
