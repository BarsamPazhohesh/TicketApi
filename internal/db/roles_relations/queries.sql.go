// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package roles_relations

import (
	"context"
)

const addApiHandlerToRolesRelation = `-- name: AddApiHandlerToRolesRelation :exec
INSERT INTO api_handlers_roles_relation (api_handler_id, role_id) VALUES (?, ?)
`

type AddApiHandlerToRolesRelationParams struct {
	ApiHandlerID int64
	RoleID       int64
}

func (q *Queries) AddApiHandlerToRolesRelation(ctx context.Context, arg AddApiHandlerToRolesRelationParams) error {
	_, err := q.db.ExecContext(ctx, addApiHandlerToRolesRelation, arg.ApiHandlerID, arg.RoleID)
	return err
}

const addTicketTypesToRolesRelation = `-- name: AddTicketTypesToRolesRelation :exec
INSERT INTO ticket_types_roles_relation (ticket_type_id, role_id) VALUES (?, ?)
`

type AddTicketTypesToRolesRelationParams struct {
	TicketTypeID int64
	RoleID       int64
}

func (q *Queries) AddTicketTypesToRolesRelation(ctx context.Context, arg AddTicketTypesToRolesRelationParams) error {
	_, err := q.db.ExecContext(ctx, addTicketTypesToRolesRelation, arg.TicketTypeID, arg.RoleID)
	return err
}

const addUsersToRolesRelation = `-- name: AddUsersToRolesRelation :exec
INSERT INTO users_roles_relation (user_id, role_id) VALUES (?, ?)
`

type AddUsersToRolesRelationParams struct {
	UserID int64
	RoleID int64
}

func (q *Queries) AddUsersToRolesRelation(ctx context.Context, arg AddUsersToRolesRelationParams) error {
	_, err := q.db.ExecContext(ctx, addUsersToRolesRelation, arg.UserID, arg.RoleID)
	return err
}
