// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: queries.sql

package api_routes

import (
	"context"
	"database/sql"
)

const addApiRoute = `-- name: AddApiRoute :one
INSERT INTO api_routes (route, method, description) VALUES (?, ?, ?) RETURNING id
`

type AddApiRouteParams struct {
	Route       string
	Method      string
	Description sql.NullString
}

func (q *Queries) AddApiRoute(ctx context.Context, arg AddApiRouteParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, addApiRoute, arg.Route, arg.Method, arg.Description)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getAPIRouteID = `-- name: GetAPIRouteID :one
SELECT id FROM api_routes
WHERE deleted = 0
AND status != 0
AND route = ?
`

func (q *Queries) GetAPIRouteID(ctx context.Context, route string) (int64, error) {
	row := q.db.QueryRowContext(ctx, getAPIRouteID, route)
	var id int64
	err := row.Scan(&id)
	return id, err
}
