basePath: /api/v1
definitions:
  ticket-api_internal_dto.ChatMessageCreateRequest:
    properties:
      attachments:
        items:
          type: string
        type: array
      message:
        type: string
      senderId:
        type: integer
    type: object
  ticket-api_internal_dto.ChatMessageDTO:
    properties:
      attachments:
        items:
          type: string
        type: array
      createdAt:
        type: string
      id:
        type: string
      message:
        type: string
      senderId:
        type: integer
      updatedAt:
        type: string
    type: object
  ticket-api_internal_dto.IDResponse-int64:
    properties:
      id:
        type: integer
    type: object
  ticket-api_internal_dto.IDResponse-string:
    properties:
      id:
        type: string
    type: object
  ticket-api_internal_dto.LoginWitNoAuthDTO:
    properties:
      departmentId:
        type: integer
      username:
        type: string
    required:
    - departmentId
    - username
    type: object
  ticket-api_internal_dto.TicketCreateRequest:
    properties:
      attachments:
        items:
          type: string
        type: array
      body:
        type: string
      departmentId:
        type: integer
      ticketStatusID:
        type: integer
      ticketTypeID:
        type: integer
      title:
        type: string
      userId:
        type: integer
    required:
    - body
    - departmentId
    - ticketStatusID
    - ticketTypeID
    - title
    - userId
    type: object
  ticket-api_internal_dto.TicketResponse:
    properties:
      TicketTypeId:
        type: integer
      chat:
        items:
          $ref: '#/definitions/ticket-api_internal_dto.ChatMessageDTO'
        type: array
      createdAt:
        type: string
      departmentId:
        type: integer
      id:
        type: string
      ticketStatusId:
        type: integer
      title:
        type: string
      trackCode:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    type: object
  ticket-api_internal_dto.VersionDTO:
    properties:
      apiVersion:
        description: 'JSON: apiVersion'
        type: string
      isCurrent:
        description: 'JSON: isCurrent'
        type: boolean
      notes:
        description: 'JSON: notes'
        type: string
      version:
        description: 'JSON: version'
        type: string
    type: object
  ticket-api_internal_errx.APIError:
    properties:
      error:
        $ref: '#/definitions/ticket-api_internal_errx.Error'
    type: object
  ticket-api_internal_errx.Error:
    properties:
      code:
        type: integer
      debug:
        type: string
      message:
        type: string
      stack:
        type: string
    type: object
info:
  contact: {}
  title: Ticket API
  version: "1.0"
paths:
  /:
    get:
      description: Returns the current version for the given API (v1, v2, etc.)
      parameters:
      - description: API Version
        enum:
        - v1
        - v2
        in: path
        name: apiVersion
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.VersionDTO'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get current API version
      tags:
      - Version
  /auth/LoginWithNoAuth:
    post:
      consumes:
      - application/json
      description: If a user with the provided username and department ID exists,
        it returns the user's ID. Otherwise, it creates a new user and returns the
        new ID.
      parameters:
      - description: Login data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/ticket-api_internal_dto.LoginWitNoAuthDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User found and ID returned
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.IDResponse-int64'
        "201":
          description: New user created and ID returned
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.IDResponse-int64'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.Error'
      summary: Login or create user without authentication
      tags:
      - Auth
  /tickets:
    post:
      consumes:
      - application/json
      description: Creates a new ticket with the provided data
      parameters:
      - description: Ticket data
        in: body
        name: ticket
        required: true
        schema:
          $ref: '#/definitions/ticket-api_internal_dto.TicketCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.IDResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.APIError'
      summary: Create a new ticket
      tags:
      - Ticket
  /tickets/{id}:
    get:
      description: Returns a ticket by its ID
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.TicketResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.APIError'
      summary: Get ticket by ID
      tags:
      - Ticket
  /tickets/{id}/chat:
    post:
      consumes:
      - application/json
      description: Adds a new chat message to an existing ticket
      parameters:
      - description: Ticket ID
        in: path
        name: id
        required: true
        type: string
      - description: Chat message data
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/ticket-api_internal_dto.ChatMessageCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ticket-api_internal_dto.ChatMessageDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ticket-api_internal_errx.Error'
      summary: Add chat message to a ticket
      tags:
      - Ticket
swagger: "2.0"
