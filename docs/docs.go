// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Returns the current version for the given API (v1, v2, etc.)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Version"
                ],
                "summary": "Get current API version",
                "parameters": [
                    {
                        "enum": [
                            "v1",
                            "v2"
                        ],
                        "type": "string",
                        "description": "API Version",
                        "name": "apiVersion",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.VersionDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/GetSingleUseToken/": {
            "post": {
                "description": "Returns a one-time JWT token to authenticate on another service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Generate one-time token for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "x-api-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Username",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.GenerateSingleUseTokenDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.SingleUseTokenResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/auth/Login/": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login with username and password",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.LoginWithPasswordDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/auth/LoginWithNoAuth/": {
            "post": {
                "description": "If a user with the provided username and department ID exists, it returns the user's ID. Otherwise, it creates a new user and returns the new ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login or create user without authentication",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.LoginWitNoAuthDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found and ID returned",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.IDResponse-int64"
                        }
                    },
                    "201": {
                        "description": "New user created and ID returned",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.IDResponse-int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    }
                }
            }
        },
        "/auth/LoginWithSingleUseToken/": {
            "get": {
                "description": "Validates a SingleUse token and returns an auth JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login using a SingleUse token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SingleUse token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/auth/SignUp/": {
            "post": {
                "description": "Create a new user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up with username and password",
                "parameters": [
                    {
                        "description": "Signup credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.SignUpWithPasswordDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.IDResponse-int64"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/captcha/GetCaptcha/": {
            "get": {
                "description": "Generates a new captcha and returns its ID and image (base64)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Captcha"
                ],
                "summary": "Generate new captcha",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.CaptchaResultDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    }
                }
            }
        },
        "/captcha/VerifyCaptcha/": {
            "post": {
                "description": "Verifies the captcha ID and user-provided answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Captcha"
                ],
                "summary": "Verify captcha",
                "parameters": [
                    {
                        "description": "Captcha Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.CaptchaVerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.CaptchaVerifyRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    }
                }
            }
        },
        "/departments/GetAllActiveDepartments/": {
            "get": {
                "description": "Returns a list of all active departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get all active departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.DepartmentDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/:id/": {
            "post": {
                "description": "Returns a ticket by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket by ID",
                "parameters": [
                    {
                        "description": "Ticket ID Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketByIDRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/:id/CreateChat/": {
            "post": {
                "description": "Adds a new chat message to an existing ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Add chat message to a ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat message data",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.ChatMessageCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.ChatMessageDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.Error"
                        }
                    }
                }
            }
        },
        "/tickets/CreateTicket/": {
            "post": {
                "description": "Creates a new ticket with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Create a new ticket",
                "parameters": [
                    {
                        "description": "Ticket data",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.IDResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/GetAllActiveTicketStatuses/": {
            "get": {
                "description": "Returns a list of all active ticket statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Get all active ticket statuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketStatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/GetAllActiveTicketTypes/": {
            "get": {
                "description": "Returns a list of all active ticket types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Get all active ticket types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketTypeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/GetTicketByTrackCode/": {
            "post": {
                "description": "Returns a ticket by its track code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket by track code",
                "parameters": [
                    {
                        "description": "Track Code Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketByTrackCodeRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        },
        "/tickets/GetTicketsList/": {
            "post": {
                "description": "Returns a paginated list of tickets based on complex filter and sort options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "List tickets with paging and filtering",
                "parameters": [
                    {
                        "description": "Ticket filter and paging options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.TicketQueryParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_dto.PagingResponse-ticket-api_internal_dto_TicketResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ticket-api_internal_errx.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "sql.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "ticket-api_internal_dto.CaptchaResultDTO": {
            "type": "object",
            "properties": {
                "answer": {
                    "description": "optional, only in debug mode",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "description": "base64",
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.CaptchaVerifyRequest": {
            "type": "object",
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.ChatMessageCreateRequest": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                },
                "senderId": {
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.ChatMessageDTO": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "senderId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.DepartmentDto": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/definitions/sql.NullString"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.GenerateSingleUseTokenDTO": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.IDResponse-int64": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.IDResponse-string": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.LoginWitNoAuthDTO": {
            "type": "object",
            "required": [
                "departmentId",
                "username"
            ],
            "properties": {
                "departmentId": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.LoginWithPasswordDTO": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.PagingResponse-ticket-api_internal_dto_TicketResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "paged items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ticket-api_internal_dto.TicketResponse"
                    }
                },
                "page": {
                    "description": "current page",
                    "type": "integer"
                },
                "page_size": {
                    "description": "number of items per page",
                    "type": "integer"
                },
                "total": {
                    "description": "total number of items",
                    "type": "integer"
                },
                "total_pages": {
                    "description": "total pages",
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.SignUpWithPasswordDTO": {
            "type": "object",
            "required": [
                "departmentId",
                "password",
                "username"
            ],
            "properties": {
                "departmentId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.SingleUseTokenResponseDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.TicketByIDRequestDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "assuming UUID",
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.TicketByTrackCodeRequestDTO": {
            "type": "object",
            "required": [
                "trackCode",
                "username"
            ],
            "properties": {
                "trackCode": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.TicketCreateRequest": {
            "type": "object",
            "required": [
                "body",
                "departmentId",
                "ticketStatusID",
                "ticketTypeID",
                "title",
                "userId"
            ],
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "body": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer"
                },
                "ticketStatusID": {
                    "type": "integer"
                },
                "ticketTypeID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.TicketQueryParams": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "integer"
                },
                "order_by": {
                    "description": "field to order by",
                    "type": "string"
                },
                "order_dir": {
                    "description": "asc or desc",
                    "type": "string"
                },
                "page": {
                    "description": "page number",
                    "type": "integer"
                },
                "page_size": {
                    "description": "items per page",
                    "type": "integer"
                },
                "status": {
                    "description": "optional filter",
                    "type": "integer"
                },
                "user_id": {
                    "description": "optional filter",
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.TicketResponse": {
            "type": "object",
            "properties": {
                "chat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ticket-api_internal_dto.ChatMessageDTO"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "departmentId": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "ticketStatusId": {
                    "type": "integer"
                },
                "ticketTypeId": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "trackCode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "ticket-api_internal_dto.TicketStatusResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.TicketTypeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_dto.VersionDTO": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "JSON: apiVersion",
                    "type": "string"
                },
                "isCurrent": {
                    "description": "JSON: isCurrent",
                    "type": "boolean"
                },
                "notes": {
                    "description": "JSON: notes",
                    "type": "string"
                },
                "version": {
                    "description": "JSON: version",
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_errx.APIError": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/definitions/ticket-api_internal_errx.Error"
                }
            }
        },
        "ticket-api_internal_errx.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/ticket-api_internal_errx.ErrorCode"
                },
                "debug": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "stack": {
                    "type": "string"
                }
            }
        },
        "ticket-api_internal_errx.ErrorCode": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
            ],
            "x-enum-varnames": [
                "ErrInternalServerError",
                "ErrTicketNotFound",
                "ErrUnauthorized",
                "ErrInvalidInput",
                "ErrDuplicate",
                "ErrBadRequest",
                "ErrUserNotFound",
                "ErrTicketTypeNotFound",
                "ErrDepartmentNotFound",
                "ErrUserDuplicate",
                "ErrInvalidCredentials",
                "ErrWeakJWTSecret",
                "ErrIncorrectCaptcha",
                "ErrTicketStatusNotFound",
                "ErrTooManyRequest",
                "ErrApiKeyNotFound"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Ticket API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
